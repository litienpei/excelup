<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-4.1.xsd">




	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="com.dcits.govsbu.sd.*taxbankportal.*.mapper" />
	<context:component-scan base-package="com.dcits.govsbu.sd.*taxbankportal.*.service" />
	<context:component-scan base-package="com.dcits.govsbu.sd.hntaxbankportal.cpsq.webSocket" />
	<context:component-scan base-package="com.dcits.govsbu.sd.*taxbankportal.util" />
	<context:component-scan base-package="com.baidu.ueditor" />
		
	<!-- 加载 jdbc.properties 配置文件:方式一 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:config/config-server-common.properties,classpath*:config/jdbc.properties,classpath*:config/message.properties"/> 
	
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="30000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
		<property name="dbType" value="mysql" />
	</bean>

	<!-- 发送手机短信配置文件 -->
	<bean id="messageUtil" class="com.dcits.govsbu.sd.taxbankportal.util.MessageUtil">
		<property name="appId" value="${APP_ID}" />
		<property name="appSecret" value="${APP_SECRET}" />
		<property name="accessToken" value="${ACCESS_TOKEN}" />
		<property name="registerId" value="${REGISTER_ID}" />
		<property name="passwordId" value="${PASSWORD_ID}" />
		<property name="accountId" value="${ACCOUNT_ID}" />
		<property name="userId" value="${USER_ID}" />
		<property name="dksqId" value="${DKSQ_ID}" />
		<property name="month" value="${MONTH}" />
		<!-- 电子税务局公钥（湖南） -->
		<property name="dzswjHn" value="${DZSWJ_HN}" />
		<!-- 重庆银行解密私（重庆） -->
		<property name="cqbankSy" value="${CQBANK_SY}" />
		<!-- 认证成功的期限天数（重庆银行） -->
		<property name="countDay" value="${COUNT_DAY}" />
	</bean>
		
	<!-- 配置数据源,使用 druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${druid.initialSize}" />
		<property name="minIdle" value="${druid.minIdle}" />
		<property name="maxActive" value="${druid.maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${druid.maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${druid.validationQuery}" />
		<property name="testWhileIdle" value="${druid.testWhileIdle}" />
		<property name="testOnBorrow" value="${druid.testOnBorrow}" />
		<property name="testOnReturn" value="${druid.testOnReturn}" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" />

		<property name="maxOpenPreparedStatements" value="${druid.maxOpenPreparedStatements}" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="${druid.removeAbandoned}" />
		<!-- 1800秒，也就是30分钟,超过30分钟,连接会自动关闭 -->
		<property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${druid.logAbandoned}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="${druid.filters}" />
		<property name="proxyFilters">
			<list><ref bean="stat-filter" /></list>
		</property>
		<property name="connectionProperties" value="${druid.connectionProperties}" />
		<property name="useGlobalDataSourceStat" value="${druid.useGlobalDataSourceStat}" />
	</bean>

	<!-- 使用sqlSessionFactoryBean工厂产生SqlSession对象，方便后期注入Dao -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- mybatis 设置 -->
		<property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml" />
		<!-- 匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:config/mybatis/*/*.xml" />
		<property name="typeAliasesPackage" value="com.dcits.govsbu.sd.*taxbankportal.*.model" />
	</bean>

	<!-- 通过扫描的模式,不需要配置SqlSessionFactory 或 SqlSessionTemplate,MapperScannerConfigurer 
		将会创建 MapperFactoryBean,之后自动装配; 但是,如果你使用了一个 以上的 DataSource ,那么自动装配可能会失效 。
		这种情况下 ,你可以使用 sqlSessionFactoryBeanName 或 sqlSessionTemplateBeanName 属性来设置正确的 bean 
		名 称来使用; 注意 bean 的名称是必须的,而不是 bean 的引用,因 此,value 属性在这里替代通常的 ref; 
		扫描目录在com.dcits.govsbu.sd.taxbankplatform.*.mapper目录下，所有的mapper都继承SqlMapper接口， 这样一个bean就可以了 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dcits.govsbu.sd.*taxbankportal.*.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!--配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 事物管理方式一：基于xml配置方式 -->
	<!-- propagation:事物传播行为 read-only:读写或只读事务，默认读写 isolation:可选的事务隔离级别设置 rollback-for:导致事务回滚的异常类数组,Class对象数组，必须继承自Throwable,一般我们都继承RuntimeException timeout:事务超时时间设置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="count*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置哪些类的方法进行事务管理:定义在service包或者子包里的任意方法的执行 -->
	<aop:config expose-proxy="true" proxy-target-class="true">
		<aop:pointcut id="transactionPointcut" expression="execution(* com.dcits.govsbu.sd.*taxbankportal.*.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut" />
	</aop:config>

	<!-- 配置事务异常封装 -->
	<bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<import resource="spring-kaptcha.xml"/>
	<!-- <import resource="spring-batch.xml"/> -->
	<import resource="spring-webservice.xml"/>
	<!-- <import resource="spring-quartz.xml"/> -->
</beans>    